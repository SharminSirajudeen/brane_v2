version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: brane_postgres
    environment:
      POSTGRES_DB: brane
      POSTGRES_USER: brane
      POSTGRES_PASSWORD: brane_secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brane"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Optional - for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: brane_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # BRANE Backend (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: brane_backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://brane:brane_secure_password@postgres:5432/brane
      REDIS_URL: redis://redis:6379/0
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ENVIRONMENT: production
      DEBUG: "false"
    volumes:
      - ./backend:/app
      - brane_storage:/app/storage
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # Frontend (React - served via nginx in production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: brane_frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      VITE_API_URL: http://localhost:8000

volumes:
  postgres_data:
  brane_storage:
